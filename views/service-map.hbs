<script src="http://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js"></script>
<script src="https://api.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.js"></script>
<link href="https://api.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.css" rel="stylesheet" />
<style>
    body {
        margin: 0;
        padding: 0;
    }

    #map {
        position: relative;
        top: 0;
        bottom: 0;
        width: 100%;
        height: 80vh;
    }

    .markerMeetingPoint {
        background-image: url('./../images/meetingpoint.png');
        background-size: cover;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        cursor: pointer;
    }

    .markerUser {
        background-image: url('./../images/usuario.png');
        background-size: cover;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        cursor: pointer;
    }

    .markerCarer {
        background-image: url('./../images/dog_marker.png');
        background-size: cover;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        cursor: pointer;
    }
</style>

<div id="map"></div>
<button type="button" id="end-service" class="btn btn-primary btn-lg">Finalizar el servicio</button>



<script>

    window.onload = () => {
        let retrievedObject = localStorage.getItem("contract");
        let contract = JSON.parse(retrievedObject);


        const coordinates = contract.geometry

        console.log(contract.carerId)

        mapboxgl.accessToken = 'pk.eyJ1IjoicHVpZ21hciIsImEiOiJja2Q1cTRjMHoyOWc1MzBwZzUxNnBqZjgzIn0.Dl_LIKPYzM72_QZAE0wZWQ';
        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v11',
            center: contract.geometry,
            zoom: 12
        });



        function getPointData(lngLat) {
            return {
                'type': 'Point',
                'coordinates': [lngLat.coords.longitude, lngLat.coords.latitude]
            };
        }

        //    var socket = io('');

        map.on('load', function () {

            var startPos;
            var latitude;
            var longitude;
            var coordsClick;

            var el = document.createElement("div");
            el.className = "markerMeetingPoint";

            var elUser = document.createElement("div");
            elUser.className = "markerUser";

            var elCarer = document.createElement("div");
            elCarer.className = "markerCarer";

            var meetingPointCoords = contract.geometry;

            // Codigo del marker
            new mapboxgl.Marker(el)
                .setLngLat(meetingPointCoords)
                .addTo(map);



            navigator.geolocation.getCurrentPosition(
                function (position) {

                    startPos = position;
                    coordsClick = getPointData(startPos)

                    map.addSource('point_source', {
                        'type': 'geojson',
                        'data': coordsClick
                    });

                    map.addLayer({
                        'id': 'point',
                        'source': 'point_source',
                        'type': 'circle',
                    });

                    new mapboxgl.Marker(elUser)
                        .setLngLat(coordsClick.coordinates)
                        .addTo(map);


                    socket.on('carersOnlineData', carerData => {
                        console.log('Datos del carer conectado ', carerData)
                        new mapboxgl.Marker(elCarer)
                            .setLngLat(carerData[0].geometry.coordinates)
                            .addTo(map);
                    });



                }, function (error) {
                    alert('Error occurred. Error code: ' + error.code);
                }
            );

            navigator.geolocation.watchPosition(
                function (position) {

                    socket.on("carersOnlineData", carerData => {

                        console.log('data from socket.io: ', carerData)

                        map.getSource('point_source').setData({
                            "type": "FeatureCollection",
                            "features": [{
                                "type": "Feature",
                                "properties": {},
                                "geometry": {
                                    "type": "Point",
                                    "coordinates": carerData[0].geometry.coordinates
                                }
                            }]
                        });

                        console.log(carerData[0].geometry.coordinates[0])

                        map.flyTo({
                            center: [
                                carerData[0].geometry.coordinates[0],
                                carerData[0].geometry.coordinates[1]
                            ],
                            speed: 0.5
                        });

                        //const user = JSON.parse(session.getItem('uUID'));
                        //socket.emit("onlineUser", {userId: user, latitude: position.coords.latitude, longitude: position.coords.longitude});

                    });
                }
            );

        });

        socket.on('user:left', data => console.log('usario ha dejado la sesion: ', data));

        const endServiceButton = document.getElementById('end-service')

        axios.post('/service-map', { contractData: contract })
            .then((data) => {
                console.log("hecho")
            })
            .catch((err) => {
                console.log(err)
            })

        endServiceButton.addEventListener('click', () => {

            //Poner en funcion 
            //Nombrar rutas como colecciones de backend


            location.href = `/feedback/${contract.carerId}`
        })





    }



</script>
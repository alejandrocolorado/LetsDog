<script src="http://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js"></script>
<script src="https://api.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.js"></script>
<link href="https://api.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.css" rel="stylesheet" />
<style>
    body {
        margin: 0;
        padding: 0;
    }

    #map {
        position: absolute;
        top: 0;
        bottom: 0;
        width: 100%;
        margin-top: 75px;
    }

    .geocoder {
        position: absolute;
        z-index: 1;
        width: 50%;
        left: 50%;
        margin-left: -25%;
        top: 10px;
    }

    .mapboxgl-ctrl-geocoder {
        min-width: 100%;
    }
</style>

<div id="map"></div>
<div id="geocoder" class="geocoder"></div>


<script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.5.1/mapbox-gl-geocoder.min.js"></script>
<link rel="stylesheet"
    href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.5.1/mapbox-gl-geocoder.css"
    type="text/css" />
<!-- Promise polyfill script required to use Mapbox GL Geocoder in IE 11 -->
<script src="https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.auto.min.js"></script>
<script>

    const session = '{{currentUserInfo.userData._id}}';

    mapboxgl.accessToken = 'pk.eyJ1IjoicHVpZ21hciIsImEiOiJja2Q1cTRjMHoyOWc1MzBwZzUxNnBqZjgzIn0.Dl_LIKPYzM72_QZAE0wZWQ';
    var map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/streets-v11',
        center: [41, 2],
        zoom: 5
    });

    map.addControl(
        new mapboxgl.GeolocateControl({
            positionOptions: {
                enableHighAccuracy: true
            },
            trackUserLocation: true
        }));

    var geocoder = new MapboxGeocoder({
        accessToken: mapboxgl.accessToken,
        mapboxgl: mapboxgl
    });

    document.getElementById('geocoder').appendChild(geocoder.onAdd(map));

    console.log(document.getElementsByClassName('.mapboxgl-ctrl-geocoder--input').value)

    //console.log(meetingLocationInput.value)

    function getPointData(lngLat) {
        return {
            'type': 'Point',
            'coordinates': [lngLat.coords.longitude, lngLat.coords.latitude]
        };
    }

    var socket = io('');

    map.on('load', function () {

        var startPos;
        var latitude;
        var longitude;
        var coordsClick;

        navigator.geolocation.getCurrentPosition(
            function (position) {

                startPos = position;
                coordsClick = getPointData(startPos)

                map.addSource('point_source', {
                    'type': 'geojson',
                    'data': coordsClick
                });

                map.addLayer({
                    'id': 'point',
                    'source': 'point_source',
                    'type': 'circle',
                    'paint': {
                        'circle-radius': 10,
                        'circle-color': '#007cbf'
                    }
                });

                socket.emit("onlineUser", { userId: `{{currentUserInfo.user._id}}`, latitude: position.coords.latitude, longitude: position.coords.longitude });
                socket.on('user:join', m => console.log('Exist a new user: ', m));

            }, function (error) {
                alert('Error occurred. Error code: ' + error.code);
            }
        );

        navigator.geolocation.watchPosition(
            function (position) {

                socket.on("showOnlineUsers", data => {

                    console.log('data from socket.io: ', data)

                    map.getSource('point_source').setData({
                        "type": "FeatureCollection",
                        "features": [{
                            "type": "Feature",
                            "properties": {},
                            "geometry": {
                                "type": "Point",
                                "coordinates": [data.longitude, data.latitude]
                            }
                        }]
                    });

                    map.flyTo({
                        center: [
                            data.longitude,
                            data.latitude
                        ],
                        speed: 0.5
                    });


                    socket.emit("onlineUser", { userId: `{{currentUserInfo.user._id}}`, latitude: position.coords.latitude, longitude: position.coords.longitude });

                });
            }
        );

    });

    socket.on('user:left', data => console.log('usario ha dejado la sesion: ', data));

</script>